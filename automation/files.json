{
  ".local/bin/add_log_entry": {
    "description": "Append a new entry in GNU changelog style."
  },
  ".local/bin/bookmarks": {
    "description": "Open bookmarks with the default web browser.",
    "packages": [
      "yq"
    ]
  },
  ".local/bin/cht": {
    "description": "Change terminal title."
  },
  ".local/bin/docker_run": {
    "description": "Run a docker image.",
    "packages": [
      "docker"
    ]
  },
  ".local/bin/extract": {
    "description": "Extract various format of compressed files."
  },
  ".local/bin/kb_light.py": {
    "description": "Modify keyboard backlight.",
    "packages": [
      "python-dbus"
    ]
  },
  ".local/bin/lock.sh": {
    "description": "Lock screen with a pixelated screenshot of your desktop.",
    "packages": [
      "xorg-xdpyinfo",
      "maim",
      "imagemagick",
      "i3lock"
    ]
  },
  ".local/bin/mdrender": {
    "description": "Create a html preview of the markdown file.",
    "packages": [
      "pandoc"
    ]
  },
  ".local/bin/np": {
    "description": "Show current artist and song playing.",
    "packages": [
      "playerctl"
    ]
  },
  ".local/bin/pomodoro.py": {
    "description": "Run the Pomodoro technique and send notifications to Telegram."
  },
  ".local/bin/qtile_test.sh" : {
    "description": "Create a window running qtile for testing"
  },
  ".local/bin/reconfigure_screens": {
    "description": ""
  },
  ".local/bin/screenshot": {
    "description": "Select a square in your screen and save the capture in your clipboard.",
    "packages": [
      "maim",
      "xclip"
    ]
  },
  ".local/bin/send_telegram_document": {
    "description": "Send a document to the telegram bot setted up.",
    "packages": [
      "jq",
      "curl"
    ]
  },
  ".local/bin/send_telegram_message": {
    "description": "Send a message to the telegram bot setted up.",
    "packages": [
      "jq",
      "curl"
    ]
  },
  ".local/share/applications/screenshot.desktop": {
    "description": "Desktop entry for screenshot script."
  },
  ".local/bin/session.sh": {
    "description": "Simple terminal GUI to suspend, restart or poweroff the system."
  },
  ".local/bin/show_keypress.sh": {
    "description": "Show key press.",
    "packages": [
      "xorg-xev"
    ]
  },
  ".local/bin/show_sxhkd_keybindings.sh": {
    "description": "Capture and show sxhkd keybindings."
  },
  ".local/bin/status.sh": {
    "description": "Check status of each git directory located in the current path.",
    "packages": [
      "git"
    ]
  },
  ".local/bin/telpipe": {
    "description": "Send the output of the piped command to your telegram user."
  },
  ".local/bin/telret": {
    "description": "Send the return code of the previous command to your telegram user."
  },
  ".local/bin/tgout": {
    "description": "Run a command with arguments and send the return code and output to telegram."
  },
  ".local/bin/toggle_laptop_keyboard": {
    "description": "Toggle the laptop keyboard"
  },
  ".local/bin/tput_color_base16.sh": {
    "description": "Show base16 fg/bg color combinations."
  },
  ".local/bin/tput_color_table.sh": {
    "description": "Show all ANSI colors with their correspondent index."
  },
  ".local/bin/vm": {
    "description": "Manage VirtualBox VM running without GUI.",
    "packages": [
      "virtualbox"
    ]
  },
  ".local/bin/xr_color_scheme.sh": {
    "description": "Show first 21 colors from Xresources."
  },
  ".local/bin/xr_wrapper_reloader.sh": {
    "description": "Reload xrdb with custom script."
  },
  ".screenlayout/brightness.py": {
    "description": "xrandr brightness script.",
    "packages": [
      "xorg-xrandr",
      "libxrandr"
    ]
  },
  ".config/nvim/init.lua": {
    "description": "Nvim configuration file.",
    "packages": [
      "neovim",
      "nvim-packer-git"
    ]
  },
  ".config/nvim/stylua.toml": {
    "description": "Nvim lua style configuration.",
    "packages": [
      "stylua"
    ]
  },
  ".config/nvim/lua/plugins.lua": {
    "description": "Nvim plugin manager: packer",
    "packages": [
      "nvim-packer-git"
    ]
  },
  ".vimrc": {
    "description": "Vim configuration file.",
    "packages": [
      "vim"
    ]
  },
  ".config/pcmanfm/default/pcmanfm.conf": {
    "description": "LXDE file manager.",
    "packages": [
      "pcmanfm"
    ]
  },
  ".config/kitty/kitty.conf": {
    "description": "Kitty terminal emulator."
  },
  ".config/ranger/commands.py": {},
  ".config/ranger/rc.conf": {},
  ".config/ranger/rifle.conf": {},
  ".config/ranger/scope.sh": {},
  ".gitconfig": {
    "description": "Git global configuration.",
    "packages": [
      "git",
      "dandavison/delta"
    ]
  },
  ".gitcommit": {
    "description": "Git commit message template.",
    "packages": [
      "git"
    ]
  },
  ".bashrc": {
    "description": "Main bash user configuration file."
  },
  ".bash_profile": {
    "description": "Entrypoint for .bashrc file."
  },
  ".config/bash/aliases.sh": {
    "description": "Utils file where the alias are defined."
  },
  ".config/bash/functions.sh": {
    "description": "Utils file where the functions are defined."
  },
  ".config/bash/variables.sh": {
    "description": "Utils file where the variables are defined."
  },
  ".config/bash/prompt.sh": {
    "description": "Custom shell prompt."
  },
  ".config/fish/config.fish": {
    "description": "Fish shell main configuration file."
  },
  ".config/fish/fishfile": {
    "description": "Fish shell file where the pluggins are defined.",
    "packages": [
      "Fisher"
    ]
  },
  ".config/terminator/config": {
    "description": "Terminator configuration file.",
    "packages": [
      "terminator"
    ]
  },
  ".config/procps/toprc": {
    "description": "Top configuration file."
  },
  ".config/qtile": {
    "description": "Qtile tiling manager configuration."
  },
  ".config/tmux/tmux.conf.local": {
    "description": "Tmux personalization using oh my tmux config.",
    "packages": [
      "tmux"
    ]
  },
  ".config/bspwm/autostart.sh": {
    "description": "bspwm app-autostart script."
  },
  ".config/bspwm/bspwmrc": {
    "description": "bspwm configuration file.",
    "packages": [
      "bspwm"
    ]
  },
  ".config/sxhkd/sxhkdrc": {
    "description": "sxhkd configuration file.",
    "packages": [
      "sxhkd"
    ]
  },
  ".config/wal/reload_services.sh": {
    "description": "Script to run after wal theme selection.",
    "packages": [
      "python-pywal"
    ]
  },
  ".config/rofi/config": {
    "description": "Rofi configuration file.",
    "packages": [
      "rofi"
    ]
  },
  ".config/wal/templates/colors-rofi-dark.rasi": {
    "description": "Wal template for Rofi.",
    "packages": [
      "python-pywal"
    ]
  },
  ".config/dunst/dunstrc": {
    "description": "Dunst notification daemon main configuration file.",
    "packages": [
      "dunst"
    ]
  },
  ".config/wal/templates/colors-dunstrc": {
    "description": "Dunst configuration template to use wal coloring. Don't use this one along with dunstrc file.",
    "packages": [
      "python-pywall"
    ]
  },
  ".config/polybar/config": {
    "description": "Polybar main configuration file.",
    "packages": [
      "aur/polybar"
    ]
  },
  ".Xresources.edit": {
    "description": "Xresources script to safely edit .Xresources through .Xresources.src."
  },
  ".Xresources.src": {
    "description": "Xresources brother."
  },
  ".config/ncspot/config.toml": {
    "description": "NCurses Spotify client.",
    "packages": [
      "ncspot"
    ]
  }
}
